#!/usr/bin/env python

import rospy
import time
from gazebo_msgs.msg import ModelState, ModelStates

class Combination():
    def __init__(self):
        self.pub_model = rospy.Publisher('gazebo/set_model_state', ModelState, queue_size=1)
        self.moving()

    def moving(self):
        state = 0
        while not rospy.is_shutdown():
            model = rospy.wait_for_message('gazebo/model_states', ModelStates)
            for i in range(len(model.name)):
                if model.name[i] == 'lv2_obstacle_4':
                    lv2_obstacle_4 = ModelState()
                    lv2_obstacle_4.model_name = model.name[i]
                    lv2_obstacle_4.pose = model.pose[i]
                    if abs(lv2_obstacle_4.pose.position.x - 0) < 0.05 and abs(lv2_obstacle_4.pose.position.y - -2) < 0.05:
                    	state = 0

                    if state == 0:
                        lv2_obstacle_4.pose.position.x += 0.012
                        lv2_obstacle_4.pose.position.y -= 0
                        if abs(lv2_obstacle_4.pose.position.x - 2) < 0.05 and abs(lv2_obstacle_4.pose.position.y - -2) < 0.05:
                            state = 1

                    elif state == 1:
                        lv2_obstacle_4.pose.position.x -= 0.012
                        lv2_obstacle_4.pose.position.y += 0
                        if abs(lv2_obstacle_4.pose.position.x - 0) < 0.05 and abs(lv2_obstacle_4.pose.position.y - -2) < 0.05:
                            state = 0

                    self.pub_model.publish(lv2_obstacle_4)
                    time.sleep(0.1)

def main():
    rospy.init_node('lv2_obstacle_4')
    try:
        combination = Combination()
    except rospy.ROSInterruptException:
        pass

if __name__ == '__main__':
    main()